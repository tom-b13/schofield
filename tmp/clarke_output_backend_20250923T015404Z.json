{
  "clarke_review": {
    "acceptable_as_is": [
      "7.2.1.1",
      "7.2.1.2",
      "7.2.1.3",
      "7.2.1.4",
      "7.2.1.5",
      "7.2.1.6",
      "7.2.1.7",
      "7.2.1.8",
      "7.2.1.9",
      "7.2.1.10",
      "7.2.1.11",
      "7.2.1.12",
      "7.2.1.13",
      "7.2.1.14",
      "7.2.1.15",
      "7.2.1.16",
      "7.2.1.17",
      "7.3.1.1",
      "7.3.1.2",
      "7.3.1.3",
      "7.3.1.4",
      "7.3.1.5",
      "7.3.1.6",
      "7.3.1.7",
      "7.3.1.8",
      "7.3.1.9",
      "7.3.1.10",
      "7.3.1.11",
      "7.3.1.12"
    ],
    "needs_improvement": [
      "7.2.2.1",
      "7.2.2.2",
      "7.2.2.3",
      "7.2.2.4",
      "7.2.2.5",
      "7.2.2.6",
      "7.2.2.7",
      "7.2.2.8",
      "7.2.2.9",
      "7.2.2.10",
      "7.2.2.11",
      "7.2.2.12",
      "7.2.2.13",
      "7.2.2.14",
      "7.2.2.15",
      "7.2.2.16",
      "7.2.2.17",
      "7.2.2.18",
      "7.2.2.19",
      "7.2.2.20",
      "7.2.2.21",
      "7.2.2.22",
      "7.2.2.23",
      "7.2.2.24",
      "7.2.2.25",
      "7.2.2.26",
      "7.2.2.27",
      "7.2.2.28",
      "7.2.2.29",
      "7.2.2.30",
      "7.2.2.31",
      "7.2.2.32",
      "7.2.2.33",
      "7.2.2.34",
      "7.2.2.35",
      "7.2.2.36",
      "7.2.2.37",
      "7.2.2.38",
      "7.2.2.39",
      "7.2.2.40",
      "7.2.2.41",
      "7.2.2.42",
      "7.2.2.43",
      "7.2.2.44",
      "7.2.2.45",
      "7.2.2.46",
      "7.2.2.47",
      "7.2.2.48",
      "7.2.2.49",
      "7.2.2.50",
      "7.2.2.51",
      "7.2.2.52",
      "7.2.2.53",
      "7.2.2.54",
      "7.2.2.55",
      "7.2.2.56",
      "7.2.2.57",
      "7.2.2.58",
      "7.2.2.59",
      "7.2.2.60",
      "7.2.2.61",
      "7.2.2.62",
      "7.2.2.63",
      "7.2.2.64",
      "7.2.2.65",
      "7.2.2.66",
      "7.2.2.67",
      "7.2.2.68",
      "7.2.2.69",
      "7.2.2.70",
      "7.2.2.71",
      "7.2.2.72",
      "7.2.2.73",
      "7.2.2.74",
      "7.2.2.75",
      "7.2.2.76",
      "7.2.2.77",
      "7.2.2.78",
      "7.2.2.79",
      "7.2.2.80",
      "7.2.2.81",
      "7.2.2.82",
      "7.2.2.83",
      "7.2.2.84",
      "7.2.2.85",
      "7.2.2.86",
      "7.2.2.87",
      "7.2.2.88",
      "7.2.2.89",
      "7.2.2.90",
      "7.2.2.91",
      "7.2.2.92",
      "7.2.2.93",
      "7.2.2.94",
      "7.2.2.95",
      "7.2.2.96",
      "7.2.2.97",
      "7.2.2.98",
      "7.2.2.99",
      "7.2.2.100",
      "7.2.2.101",
      "7.2.2.102",
      "7.2.2.103",
      "7.2.2.104",
      "7.2.2.105",
      "7.2.2.106",
      "7.2.2.107",
      "7.2.2.108",
      "7.2.2.109",
      "7.2.2.110",
      "7.2.2.111",
      "7.2.2.112",
      "7.2.2.113",
      "7.2.2.114",
      "7.2.2.115",
      "7.2.2.116",
      "7.2.2.117",
      "7.2.2.118",
      "7.2.2.119",
      "7.2.2.120",
      "7.2.2.121",
      "7.2.2.122",
      "7.2.2.123",
      "7.2.2.124",
      "7.2.2.125",
      "7.2.2.126",
      "7.3.2.1",
      "7.3.2.2",
      "7.3.2.3",
      "7.3.2.4",
      "7.3.2.5",
      "7.3.2.6",
      "7.3.2.7",
      "7.3.2.8",
      "7.3.2.9",
      "7.3.2.10",
      "7.3.2.11",
      "7.3.2.12",
      "7.3.2.13",
      "7.3.2.14",
      "7.3.2.15",
      "7.3.2.16",
      "7.3.2.17",
      "7.3.2.18",
      "7.3.2.19",
      "7.3.2.20"
    ],
    "required_missing_tests": [],
    "suspicious_passing_tests": [],
    "explicit_actions_for_ada": [
      {
        "test_id": "7.2.2.1",
        "category": "needs_improvement",
        "instruction": "Fix the dynamic test builder quoting: change the outer f-string assigned to src to use triple single quotes, so the embedded \"\"\"{doc}\"\"\" docstring does not terminate the string; ensure this test collects with existing mocks/asserts intact.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "SyntaxError at docstring (line ~754) during import; raw log tmp/raw_test_output_backend_20250923T014820Z.txt; offending pattern: src = f\"\"\"...\\n    \"\"\"{doc}\"\"\""
      },
      {
        "test_id": "7.2.2.2",
        "category": "needs_improvement",
        "instruction": "Apply the same src quoting fix in the 7.2.2 generator to resolve collection; keep invalid-JSON mock and position/message asserts.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Shared generator builds 7.2.2.* tests via f-string; same SyntaxError blocks collection."
      },
      {
        "test_id": "7.2.2.3",
        "category": "needs_improvement",
        "instruction": "Apply the src quoting fix in the 7.2.2 generator so this test is importable; retain schema mismatch message asserts; remove the unused local schema_validator mock or assert a real boundary call.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Local mock created then asserted without being called; plus global SyntaxError in generator."
      },
      {
        "test_id": "7.2.2.4",
        "category": "needs_improvement",
        "instruction": "Fix the generator string quoting so this test collects; keep missing-file mock and path/message asserts.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Generator f-string quoting collision with embedded docstring."
      },
      {
        "test_id": "7.2.2.5",
        "category": "needs_improvement",
        "instruction": "Fix the generator quoting so this test is collected; keep UnicodeDecodeError mock and encoding message/assert_called_once checks.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "SyntaxError prevents import; fix outer f-string quoting."
      },
      {
        "test_id": "7.2.2.6",
        "category": "needs_improvement",
        "instruction": "Fix the generator f-string quoting; ensure the mermaid_parser mock and 'unknown directive' message assertions remain.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Import fails due to src f-string embedding \"\"\"{doc}\"\"\"; adjust to '''."
      },
      {
        "test_id": "7.2.2.7",
        "category": "needs_improvement",
        "instruction": "Resolve the generator quoting issue so this test imports; keep FileNotFoundError mock, message includes 'docs/erd_relationships.csv', and open called-once assertion.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Same SyntaxError in dynamic 7.2.2 block prevents collection."
      },
      {
        "test_id": "7.2.2.8",
        "category": "needs_improvement",
        "instruction": "Fix src quoting in the 7.2.2 generator; preserve csv.Error mock, message contents, and csv_reader.assert_called_once.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Module import error at generator docstring location."
      },
      {
        "test_id": "7.2.2.9",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep CSV header mismatch message asserts and csv_reader.assert_called_once.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "SyntaxError in dynamic test builder breaks import."
      },
      {
        "test_id": "7.2.2.10",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting to restore collection; retain FileNotFoundError mock, filename mentions, and open.assert_called_once.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Import fails at embedded docstring within f-string."
      },
      {
        "test_id": "7.2.2.11",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep sql_executor mock with invalid token and .execute.assert_called_once plus SQL/syntax message asserts.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "SyntaxError blocks dynamic tests."
      },
      {
        "test_id": "7.2.2.12",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep execution error path with executor mock and message asserts; assert executor.assert_called.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Common generator defect; see raw log."
      },
      {
        "test_id": "7.2.2.13",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep missing constraints file mock and single-call/path/message asserts.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Generator string quoting conflict."
      },
      {
        "test_id": "7.2.2.14",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; retain invalid SQL token asserts and sql_executor.execute.assert_called_once.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Import blocked by SyntaxError at f-string with embedded docstring."
      },
      {
        "test_id": "7.2.2.15",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep executor execution error assertions and executor.assert_called.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Dynamic 7.2.2 test builder not importable."
      },
      {
        "test_id": "7.2.2.16",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep missing indexes file mock and message/includes asserts with open.assert_called_once.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Shared generator SyntaxError."
      },
      {
        "test_id": "7.2.2.17",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep invalid index SQL token asserts and sql_executor.execute.assert_called_once.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Import SyntaxError at dynamic builder."
      },
      {
        "test_id": "7.2.2.18",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep executor failure path with executor.assert_called and message keywords asserts.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Generator f-string quoting issue."
      },
      {
        "test_id": "7.2.2.19",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep missing rollbacks script mock and message/path assertion with open.assert_called_once.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Same SyntaxError blocks collection."
      },
      {
        "test_id": "7.2.2.20",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep invalid rollback SQL token asserts and sql_executor.execute.assert_called_once.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Generator embeds \"\"\" inside f\"\"\"; change outer quotes."
      },
      {
        "test_id": "7.2.2.21",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep executor failure asserts and executor.assert_called; ensure outputs/events absent as written.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Import-time SyntaxError at dynamic test source."
      },
      {
        "test_id": "7.2.2.22",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; maintain config/DB URL missing assertions; add boundary assert only if available in spec.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Common generator defect; raw log reference."
      },
      {
        "test_id": "7.2.2.23",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep invalid DSN message asserts and ensure no DB ops occur (no events/outputs).",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Generator SyntaxError blocks load."
      },
      {
        "test_id": "7.2.2.24",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep socket.getaddrinfo mock and message contains 'host' and 'resolve' with m_dns.assert_called_once.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Dynamic 7.2.2 test source not parseable."
      },
      {
        "test_id": "7.2.2.25",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep TLS-required message/asserts as per spec; ensure no outputs/events.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Shared generator SyntaxError blocks collection."
      },
      {
        "test_id": "7.2.2.26",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; retain TLS handshake failure assertions and boundary checks if present in spec.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Import failure due to triple-quote nesting."
      },
      {
        "test_id": "7.2.2.27",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting to restore collection; keep certificate validation error assertions per spec.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Dynamic test builder SyntaxError."
      },
      {
        "test_id": "7.2.2.28",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep TLS cipher suite mismatch assertions and ensure no downstream events/outputs.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Same SyntaxError root cause."
      },
      {
        "test_id": "7.2.2.29",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; maintain KMS key unavailable/invalid message asserts as per spec.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Import blocked at dynamic f-string with embedded docstring."
      },
      {
        "test_id": "7.2.2.30",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep encryption-at-rest policy error messaging asserts; no outputs.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Generator quoting issue persists."
      },
      {
        "test_id": "7.2.2.31",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep partial unique index violation message/path asserts where applicable.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Import-time SyntaxError at 7.2.2 block."
      },
      {
        "test_id": "7.2.2.32",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep unique constraint violation messaging asserts for Response and related entities.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Dynamic test builder not parseable."
      },
      {
        "test_id": "7.2.2.33",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep AnswerOption uniqueness violation asserts as specified.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "SyntaxError blocks test import."
      },
      {
        "test_id": "7.2.2.34",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep foreign key violation messaging asserts per spec sections.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Import blocked at docstring in f-string."
      },
      {
        "test_id": "7.2.2.35",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep index creation failures assertions per spec if present.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Common generator SyntaxError."
      },
      {
        "test_id": "7.2.2.36",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; maintain transaction abort assertions for migration errors per spec.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Dynamic source string quoting issue."
      },
      {
        "test_id": "7.2.2.37",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep idempotency violation assertions (re-run protections) as specified.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Import SyntaxError persists."
      },
      {
        "test_id": "7.2.2.38",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep missing truststore file mock and assert mTLS materials unavailability messaging and open.assert_called_once.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Generator quoting conflict in dynamic tests."
      },
      {
        "test_id": "7.2.2.39",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep TLS handshake failure assertions as per spec details.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Import-time SyntaxError affects all 7.2.2.*."
      },
      {
        "test_id": "7.2.2.40",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep unsupported protocol/cipher assertions intact as per spec.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Shared generator defect blocking collection."
      },
      {
        "test_id": "7.2.2.41",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep missing encryption policy directory mock and single-call/path asserts; ensure 'outputs' key is absent (not None) if spec demands.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "SyntaxError in dynamic builder; also check 'outputs' absence vs None per spec language."
      },
      {
        "test_id": "7.2.2.42",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep encryption policy parse error message asserts and boundary usage checks.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Generator quoting issue remains."
      },
      {
        "test_id": "7.2.2.43",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep KMS permission denied/forbidden message assertions per spec guidance.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Import fails at dynamic string docstring."
      },
      {
        "test_id": "7.2.2.44",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep env var missing assertions for encryption toggles as specified.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Dynamic block SyntaxError."
      },
      {
        "test_id": "7.2.2.45",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep decryption failure assertions per spec if present.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Generator not importable."
      },
      {
        "test_id": "7.2.2.46",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep schema drift detection assertions per spec content.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "SyntaxError blocks collection."
      },
      {
        "test_id": "7.2.2.47",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep rollback mismatch assertions and ensure no outputs/events as required.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Common generator issue."
      },
      {
        "test_id": "7.2.2.48",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep missing rollback step object assertions if defined by spec.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Import SyntaxError present."
      },
      {
        "test_id": "7.2.2.49",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep invalid rollback order assertions where specified.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Dynamic tests not importable."
      },
      {
        "test_id": "7.2.2.50",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep duplicate placeholder_code conflict assertions per spec narrative.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Generator f-string/docstring conflict."
      },
      {
        "test_id": "7.2.2.51",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep enum value constraint violation assertions as defined.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Import failure due to quoting."
      },
      {
        "test_id": "7.2.2.52",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep foreign key cascade/prevent assertions as present in spec.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Shared SyntaxError in block."
      },
      {
        "test_id": "7.2.2.53",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep unsupported data type rejection assertions as specified (message contains 'unsupported'/'type').",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Generator import blocked."
      },
      {
        "test_id": "7.2.2.54",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep idempotent re-run guard assertions (no duplicate creation) per spec guidance.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Dynamic code string quoting issue."
      },
      {
        "test_id": "7.2.2.55",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep output schema absence assertions strict when spec states 'No outputs field' (require key absence).",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Current assertion allows None/{}; spec often says 'No outputs field'."
      },
      {
        "test_id": "7.2.2.56",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep telemetry/events emptiness assertions for sad paths as per spec.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Import blocked; adjust 'outputs' absence if spec mandates."
      },
      {
        "test_id": "7.2.2.57",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep constraint naming/message assertions per spec text if present.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Shared SyntaxError."
      },
      {
        "test_id": "7.2.2.58",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep primary key duplication rejection message asserts per spec if applicable.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Dynamic f-string/docstring conflict."
      },
      {
        "test_id": "7.2.2.59",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep index duplication detection message asserts per spec if applicable.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Generator SyntaxError blocks collection."
      },
      {
        "test_id": "7.2.2.60",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep constraint dependency resolution failure message asserts per spec guidance.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Import blocked by quoting."
      },
      {
        "test_id": "7.2.2.61",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep migration out-of-order abort message assertions per spec ('out of order').",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Dynamic string SyntaxError."
      },
      {
        "test_id": "7.2.2.62",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep partial outputs prevention asserts strict (key should be absent where spec says so).",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "'outputs' assertion currently lenient; tighten per spec phrasing."
      },
      {
        "test_id": "7.2.2.63",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep deterministic failure code mapping asserts using Error Mode values extracted from spec.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Import failing; Error Mode mapping in place."
      },
      {
        "test_id": "7.2.2.64",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep failure envelope structure asserts (status=error, exit_code=1).",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Same SyntaxError blocks load."
      },
      {
        "test_id": "7.2.2.65",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep strict message content checks as specified for this section.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Generator not importable."
      },
      {
        "test_id": "7.2.2.66",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep single-call boundary assertions (e.g., open/assert_called_once) where defined in spec.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Import blocked; boundary mocks added already."
      },
      {
        "test_id": "7.2.2.67",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep guarding against downstream operations (no events/outputs) for sad paths.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Common generator SyntaxError."
      },
      {
        "test_id": "7.2.2.68",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep specific artefact filename/message assertions per spec narrative for this section.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Dynamic builder import error."
      },
      {
        "test_id": "7.2.2.69",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep assertion of exact error.code from spec (Error Mode mapping preserved).",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "SyntaxError prevents collection."
      },
      {
        "test_id": "7.2.2.70",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; ensure assertion checks for absence of outputs when spec states 'No outputs field'.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Current helper allows None/{}; adjust for strict absence where required."
      },
      {
        "test_id": "7.2.2.71",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep enforcement that result['error']['message'] is non-empty string as already asserted.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Import blocked by quoting issue."
      },
      {
        "test_id": "7.2.2.72",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep precise message tokens expected for this section per spec text.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Generator f-string/docstring conflict."
      },
      {
        "test_id": "7.2.2.73",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep assert_called_once/args checks for boundary where applicable in this section.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Import blocked; boundary asserts ready."
      },
      {
        "test_id": "7.2.2.74",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep correct halting behavior assertions (no further steps recorded).",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Dynamic code string invalid."
      },
      {
        "test_id": "7.2.2.75",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep explicit mention checks required by this section's message requirements.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "SyntaxError persists."
      },
      {
        "test_id": "7.2.2.76",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; retain all existing mocks/asserts; ensure collection works post-fix.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Import log shows SyntaxError at docstring."
      },
      {
        "test_id": "7.2.2.77",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep current assert set; ensure strictness matches spec phrasing.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Common generator failure."
      },
      {
        "test_id": "7.2.2.78",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep boundary invocation expectations if specified; no outputs/events.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Dynamic builder SyntaxError."
      },
      {
        "test_id": "7.2.2.79",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep message key phrases asserts per spec section text.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Import blocked."
      },
      {
        "test_id": "7.2.2.80",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; retain failure envelope asserts; ensure collection post-fix.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Shared SyntaxError."
      },
      {
        "test_id": "7.2.2.81",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep asserts matching this section's specific failure mode from spec.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Generator quoting bug."
      },
      {
        "test_id": "7.2.2.82",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep existing checks; ensure outputs absence per spec wording.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "'outputs' leniency may need tightening where spec says 'No outputs field'."
      },
      {
        "test_id": "7.2.2.83",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep section-specific message/boundary asserts; ensure test collects.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Import failure."
      },
      {
        "test_id": "7.2.2.84",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep boundary and message checks; ensure no outputs/events produced.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Common SyntaxError root."
      },
      {
        "test_id": "7.2.2.85",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep message text coverage as per spec; ensure collection works.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Dynamic f-string/docstring issue."
      },
      {
        "test_id": "7.2.2.86",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep strict exit_code/status/error.code assertions as already present.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Import-time SyntaxError."
      },
      {
        "test_id": "7.2.2.87",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; ensure boundary .assert_called_once where mocks were added for this section.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Generator not importable."
      },
      {
        "test_id": "7.2.2.88",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep required message tokens; collect test post-fix.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "SyntaxError blocks dynamic tests."
      },
      {
        "test_id": "7.2.2.89",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep section-specific boundary/message asserts intact.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Shared f-string quoting issue."
      },
      {
        "test_id": "7.2.2.90",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep Error Mode code equality assertion; ensure collection.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Import blocked."
      },
      {
        "test_id": "7.2.2.91",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep message content assertions per spec; ensure no outputs/events.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Dynamic generator SyntaxError."
      },
      {
        "test_id": "7.2.2.92",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep single-call boundary asserts where mocked; then collect test.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Import SyntaxError persists."
      },
      {
        "test_id": "7.2.2.93",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep ensured no partial outputs; prefer key absence when spec uses 'No outputs field'.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "'outputs' leniency note."
      },
      {
        "test_id": "7.2.2.94",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep message detail asserts; ensure test collects successfully.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "SyntaxError at dynamic builder."
      },
      {
        "test_id": "7.2.2.95",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; maintain failure envelope and message content checks per spec.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Generator import blocked."
      },
      {
        "test_id": "7.2.2.96",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; ensure boundary assertions remain effective and test collects post-fix.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Import failure due to quoting."
      },
      {
        "test_id": "7.2.2.97",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep exact string tokens required by this section; then collect test.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Shared SyntaxError."
      },
      {
        "test_id": "7.2.2.98",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep 'no downstream operations' guards as already asserted; then import test.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Dynamic tests not importable."
      },
      {
        "test_id": "7.2.2.99",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; retain specific message checks; ensure collection works.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Import-time SyntaxError."
      },
      {
        "test_id": "7.2.2.100",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep exact error.code equality from spec (Error Mode).",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "SyntaxError in builder."
      },
      {
        "test_id": "7.2.2.101",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep boundary usage assertions; ensure importable test function.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Generator f-string/docstring conflict."
      },
      {
        "test_id": "7.2.2.102",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; maintain message assertions specific to this case; then collect test.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Import blocked by SyntaxError."
      },
      {
        "test_id": "7.2.2.103",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep asserts as implemented; ensure strict 'outputs' absence where required by spec wording.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "'outputs' leniency caveat; SyntaxError blocks import."
      },
      {
        "test_id": "7.2.2.104",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep envelope and message asserts; import should succeed post-fix.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Common generator issue."
      },
      {
        "test_id": "7.2.2.105",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep boundary call assertions intact and message tokens checked.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Generator not importable."
      },
      {
        "test_id": "7.2.2.106",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; maintain code/message equality assertions; ensure test collects.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Import SyntaxError at docstring."
      },
      {
        "test_id": "7.2.2.107",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep single-call mock assertions and message text per spec; collect test post-fix.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Dynamic builder SyntaxError."
      },
      {
        "test_id": "7.2.2.108",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep message token checks; ensure no outputs/events for sad path.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Import blocked."
      },
      {
        "test_id": "7.2.2.109",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep boundary usage asserts; then collect test.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "SyntaxError remains."
      },
      {
        "test_id": "7.2.2.110",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep precise message asserts; ensure collection works.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Shared f-string/docstring issue."
      },
      {
        "test_id": "7.2.2.111",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep exact exit_code/status/error.code asserts; import test successfully post-fix.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Import-time SyntaxError."
      },
      {
        "test_id": "7.2.2.112",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep message/boundary asserts; ensure strict 'outputs' absence where spec says 'No outputs field'.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "'outputs' assertion is currently lenient; plus generator SyntaxError."
      },
      {
        "test_id": "7.2.2.113",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep all asserts; import test post-fix.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Dynamic block SyntaxError."
      },
      {
        "test_id": "7.2.2.114",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep section-defined message keys; ensure no outputs/events.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Generator not importable."
      },
      {
        "test_id": "7.2.2.115",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep boundary asserts; import works after change to ''' for src.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "SyntaxError at \"\"\"{doc}\"\"\" line."
      },
      {
        "test_id": "7.2.2.116",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep message content checks per spec; then collect test.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Common generator issue."
      },
      {
        "test_id": "7.2.2.117",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep assert_called_once and message tokens; import test post-fix.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Import blocked by quoting."
      },
      {
        "test_id": "7.2.2.118",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep strict error envelope; ensure collection works after fix.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Generator SyntaxError persists."
      },
      {
        "test_id": "7.2.2.119",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; retain exact message assertions; collect test post-fix.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Shared generator defect."
      },
      {
        "test_id": "7.2.2.120",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep section's boundary and message checks; ensure no outputs/events.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Import SyntaxError."
      },
      {
        "test_id": "7.2.2.121",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep precise assertions; ensure collection works after fix.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Dynamic builder not importable."
      },
      {
        "test_id": "7.2.2.122",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep existing assertions; ensure strict outputs absence where spec requires 'No outputs field'.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "'outputs' leniency noted; import blocked."
      },
      {
        "test_id": "7.2.2.123",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep boundary/message checks; import test post-fix.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "SyntaxError present."
      },
      {
        "test_id": "7.2.2.124",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep asserts strict; ensure collection works after fix.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Generator issue blocks import."
      },
      {
        "test_id": "7.2.2.125",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep all asserts; ensure test collects after change.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Shared SyntaxError in dynamic tests."
      },
      {
        "test_id": "7.2.2.126",
        "category": "needs_improvement",
        "instruction": "Fix generator quoting; keep asserts; ensure importable function is created for this section.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Import blocked due to f-string/docstring collision."
      },
      {
        "test_id": "7.3.2.1",
        "category": "needs_improvement",
        "instruction": "Fix the 7.3.2 dynamic generator src quoting (use triple single quotes) to resolve the SyntaxError; keep executor mock and migration message/asserts intact.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Dynamic 7.3.2 block also embeds \"\"\"{doc}\"\"\" inside f\"\"\"; same import error applies."
      },
      {
        "test_id": "7.3.2.2",
        "category": "needs_improvement",
        "instruction": "Apply the same src quoting fix; keep constraint executor mock and 'constraint' message/asserts.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Common generator defect."
      },
      {
        "test_id": "7.3.2.3",
        "category": "needs_improvement",
        "instruction": "Apply the src quoting fix; keep KMS mock and encryption message/asserts.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Import blocked by quoting."
      },
      {
        "test_id": "7.3.2.4",
        "category": "needs_improvement",
        "instruction": "Apply the src quoting fix; keep rollback mock and 'rollback' message/asserts.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Dynamic generator SyntaxError."
      },
      {
        "test_id": "7.3.2.5",
        "category": "needs_improvement",
        "instruction": "Apply the src quoting fix; keep ssl wrap_socket patch and 'tls' message/asserts with m_tls.assert_called_once.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Same quoting issue blocks collection."
      },
      {
        "test_id": "7.3.2.6",
        "category": "needs_improvement",
        "instruction": "Apply the src quoting fix; keep validator mock and validation/type message/asserts.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Generator not importable."
      },
      {
        "test_id": "7.3.2.7",
        "category": "needs_improvement",
        "instruction": "Apply the src quoting fix; keep joiner mock and 'join' message/asserts intact.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Import-time SyntaxError."
      },
      {
        "test_id": "7.3.2.8",
        "category": "needs_improvement",
        "instruction": "Apply the src quoting fix; keep KMS mock and invalid key message/asserts intact.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Dynamic builder SyntaxError."
      },
      {
        "test_id": "7.3.2.9",
        "category": "needs_improvement",
        "instruction": "Apply the src quoting fix; keep builtins.open FileNotFoundError mock for CA materials and m_ca.assert_called_once; assert message mentions TLS materials.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Generator quoting issue."
      },
      {
        "test_id": "7.3.2.10",
        "category": "needs_improvement",
        "instruction": "Apply the src quoting fix; keep type validator mock and 'unsupported/type' message/asserts.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Import blocked due to quoting."
      },
      {
        "test_id": "7.3.2.11",
        "category": "needs_improvement",
        "instruction": "Apply the src quoting fix; keep additional 7.3.2.x assertions as per spec for this item (status, code, message, no events).",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Shared SyntaxError in 7.3.2 dynamic generator."
      },
      {
        "test_id": "7.3.2.12",
        "category": "needs_improvement",
        "instruction": "Apply the src quoting fix; preserve boundary/mock usage and message asserts as implemented.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Import fails until quoting is corrected."
      },
      {
        "test_id": "7.3.2.13",
        "category": "needs_improvement",
        "instruction": "Apply the src quoting fix; keep exact error.code mapping and 'no events' assertion.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Dynamic source string not parseable."
      },
      {
        "test_id": "7.3.2.14",
        "category": "needs_improvement",
        "instruction": "Apply the src quoting fix; keep all current asserts intact; ensure importable test is generated.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "SyntaxError blocks collection."
      },
      {
        "test_id": "7.3.2.15",
        "category": "needs_improvement",
        "instruction": "Apply the src quoting fix; keep strict message tokens for this section as per spec; ensure no events.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Generator quoting issue."
      },
      {
        "test_id": "7.3.2.16",
        "category": "needs_improvement",
        "instruction": "Apply the src quoting fix; ensure boundary assert_called is retained; collect test post-fix.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Import SyntaxError at dynamic builder."
      },
      {
        "test_id": "7.3.2.17",
        "category": "needs_improvement",
        "instruction": "Apply the src quoting fix; keep message checks and 'no events' assertion; ensure importable test.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Dynamic generator not importable."
      },
      {
        "test_id": "7.3.2.18",
        "category": "needs_improvement",
        "instruction": "Apply the src quoting fix; retain all asserts; ensure importable test function is created.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Module import fails due to quoting."
      },
      {
        "test_id": "7.3.2.19",
        "category": "needs_improvement",
        "instruction": "Apply the src quoting fix; keep existing message/boundary asserts; ensure 'events' remains empty for sad path.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Generator SyntaxError."
      },
      {
        "test_id": "7.3.2.20",
        "category": "needs_improvement",
        "instruction": "Apply the src quoting fix; keep unsupported data type / validation assertions intact; ensure test collects post-fix.",
        "files": [
          "tests/functional/test_epic_a_data_model_functional.py"
        ],
        "evidence": "Import blocked."
      }
    ]
  },
  "final_decision": {
    "continue": false
  }
}