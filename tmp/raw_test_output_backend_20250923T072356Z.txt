============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-8.4.1, pluggy-1.6.0
rootdir: /home/codex/schofield
plugins: mock-3.14.1, anyio-4.9.0, cov-6.2.1, langsmith-0.4.1
collected 202 items

tests/architectural/test_epic_a_data_model_architecture.py ............. [  6%]
..............                                                           [ 13%]
tests/functional/test_epic_a_data_model_functional.py ..FF...........F.. [ 22%]
......F.sFF..FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF.FFFFFFFFFFFFFFFFFFFFFFFF [ 57%]
FFFFFFFFFFFFFFFFF.FFF.FF.......FFF.FF..FFF.FF.FFFFFFFFFFFFFFFFFFFFFFFFFF [ 93%]
FFFFFFFFFFFFF                                                            [100%]

=================================== FAILURES ===================================
____________ test_contract_7_2_1_3_primary_key_externally_declared _____________

    def test_contract_7_2_1_3_primary_key_externally_declared():
        """Verifies 7.2.1.3 — Primary keys declared for all entities with exact columns."""
        outputs = get_outputs_snapshot()["outputs"]
        assert outputs is not None and "entities" in outputs
        by_name = {e.get("name"): e for e in outputs["entities"]}
        for entity_name, ent in _erd_entities().items():
            pk_cols = list((ent.get("pk") or {}).keys())
            assert entity_name in by_name
            actual_pk = by_name[entity_name].get("primary_key", {}).get("columns")
            # Assert: non-empty when PK defined; exact order
            if pk_cols:
                assert isinstance(actual_pk, list) and len(actual_pk) > 0
                assert actual_pk == pk_cols
            else:
                # If ERD has no PK, outputs must also omit PK
>               assert not actual_pk
E               AssertionError: assert not ['option_id']

tests/functional/test_epic_a_data_model_functional.py:471: AssertionError
__________________ test_contract_7_2_1_4_foreign_keys_present __________________

    def test_contract_7_2_1_4_foreign_keys_present():
        """Verifies 7.2.1.4 — All required foreign keys are present across entities."""
        outputs = get_outputs_snapshot()["outputs"]
        assert outputs is not None and "entities" in outputs
        by_name = {e.get("name"): e for e in outputs["entities"]}
        for entity_name in _erd_entities().keys():
>           expected_fks = _expected_fks_from_erd(entity_name)

tests/functional/test_epic_a_data_model_functional.py:480: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

entity_name = 'AnswerOption'

    def _expected_fks_from_erd(entity_name: str) -> List[Dict[str, Any]]:
        ent = _erd_entities()[entity_name]
        fks: List[Dict[str, Any]] = []
>       for col, t in (ent.get("fields") or {}).items():
E       AttributeError: 'list' object has no attribute 'items'

tests/functional/test_epic_a_data_model_functional.py:390: AttributeError
__________ test_contract_7_2_1_16_tls_enforcement_externally_visible ___________

    def test_contract_7_2_1_16_tls_enforcement_externally_visible():
        """Verifies 7.2.1.16 — TLS enforcement surfaced in configuration outputs."""
        outputs = get_outputs_snapshot()["outputs"]
        assert outputs is not None
        config = outputs.get("config", {})
        # Assert: TLS flag is visible and true
>       assert config.get("database", {}).get("ssl", {}).get("required") is True
E       AssertionError: assert None is True
E        +  where None = <built-in method get of dict object at 0x7f52d023d900>('required')
E        +    where <built-in method get of dict object at 0x7f52d023d900> = {}.get
E        +      where {} = <built-in method get of dict object at 0x7f52d023d5c0>('ssl', {})
E        +        where <built-in method get of dict object at 0x7f52d023d5c0> = {}.get
E        +          where {} = <built-in method get of dict object at 0x7f52d023d8c0>('database', {})
E        +            where <built-in method get of dict object at 0x7f52d023d8c0> = {}.get

tests/functional/test_epic_a_data_model_functional.py:667: AssertionError
__________ test_behaviour_7_3_1_8_rollback_immediately_after_failure ___________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d0676620>

    def test_behaviour_7_3_1_8_rollback_immediately_after_failure(mocker):
        """Verifies 7.3.1.8 — rollback initiated immediately after migration failure."""
        seq = run_step3_sequence()
        events = seq["events"]
        # Assert: rollback occurs once and immediately after failure.migration
>       assert events.count("rollback") == 1
E       AssertionError: assert 0 == 1
E        +  where 0 = <built-in method count of list object at 0x7f52d03ec240>('rollback')
E        +    where <built-in method count of list object at 0x7f52d03ec240> = ['runner.start', 'create_tables', 'create_constraints', 'apply_encryption', 'tls.established', 'db.execute', ...].count

tests/functional/test_epic_a_data_model_functional.py:760: AssertionError
_______ test_behaviour_7_3_1_11_template_registration_without_migrations _______

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d036ebf0>

    def test_behaviour_7_3_1_11_template_registration_without_migrations(mocker):
        """Verifies 7.3.1.11 — template registration does not invoke migration runner."""
        seq = run_step3_sequence()
        events = seq["events"]
        # Assert: template.register occurs once; migration runner start not present
>       assert events.count("template.register") == 1
E       AssertionError: assert 0 == 1
E        +  where 0 = <built-in method count of list object at 0x7f52d00132c0>('template.register')
E        +    where <built-in method count of list object at 0x7f52d00132c0> = ['runner.start', 'create_tables', 'create_constraints', 'apply_encryption', 'tls.established', 'db.execute', ...].count

tests/functional/test_epic_a_data_model_functional.py:785: AssertionError
________ test_behaviour_7_3_1_12_policy_registration_without_migrations ________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d067f850>

    def test_behaviour_7_3_1_12_policy_registration_without_migrations(mocker):
        """Verifies 7.3.1.12 — policy registration does not invoke migration runner."""
        seq = run_step3_sequence()
        events = seq["events"]
        # Assert: policy.register occurs once; migration runner start not present
>       assert events.count("policy.register") == 1
E       AssertionError: assert 0 == 1
E        +  where 0 = <built-in method count of list object at 0x7f52d002c280>('policy.register')
E        +    where <built-in method count of list object at 0x7f52d002c280> = ['runner.start', 'create_tables', 'create_constraints', 'apply_encryption', 'tls.established', 'db.execute', ...].count

tests/functional/test_epic_a_data_model_functional.py:794: AssertionError
________________ test_contract_7_2_2_3_erd_spec_schema_mismatch ________________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d0678d00>

>   ???
E   AssertionError

<string>:20: AssertionError
_____________ test_contract_7_2_2_4_mermaid_erd_missing_unreadable _____________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d0679210>

>   ???
E   AssertionError

<string>:18: AssertionError
_________________ test_contract_7_2_2_5_mermaid_erd_not_utf_8 __________________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d067c520>

>   ???
E   AssertionError

<string>:18: AssertionError
_______________ test_contract_7_2_2_6_mermaid_erd_invalid_syntax _______________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d036c310>

>   ???
E   AssertionError

<string>:19: AssertionError
__________ test_contract_7_2_2_7_relationships_csv_missing_unreadable __________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d036e4a0>

>   ???
E   AssertionError

<string>:18: AssertionError
_____________ test_contract_7_2_2_8_relationships_csv_invalid_csv ______________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d036d6f0>

>   ???
E   AssertionError

<string>:18: AssertionError
___________ test_contract_7_2_2_9_relationships_csv_header_mismatch ____________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d0669a80>

>   ???
E   AssertionError

<string>:18: AssertionError
___________ test_contract_7_2_2_10_init_migration_missing_unreadable ___________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d0688b20>

>   ???
E   AssertionError

<string>:18: AssertionError
______________ test_contract_7_2_2_11_init_migration_invalid_sql _______________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d0668460>

>   ???
E   AssertionError

<string>:19: AssertionError
____________ test_contract_7_2_2_12_init_migration_execution_error _____________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d0668850>

>   ???
E   AssertionError

<string>:20: AssertionError
_______ test_contract_7_2_2_13_constraints_migration_missing_unreadable ________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d0669210>

>   ???
E   AssertionError

<string>:18: AssertionError
___________ test_contract_7_2_2_14_constraints_migration_invalid_sql ___________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d066a410>

>   ???
E   AssertionError

<string>:19: AssertionError
_________ test_contract_7_2_2_15_constraints_migration_execution_error _________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d060c7f0>

>   ???
E   AssertionError

<string>:20: AssertionError
_________ test_contract_7_2_2_16_indexes_migration_missing_unreadable __________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d06894e0>

>   ???
E   AssertionError

<string>:18: AssertionError
_____________ test_contract_7_2_2_17_indexes_migration_invalid_sql _____________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d036d1e0>

>   ???
E   AssertionError

<string>:19: AssertionError
___________ test_contract_7_2_2_18_indexes_migration_execution_error ___________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d036e440>

>   ???
E   AssertionError

<string>:20: AssertionError
________ test_contract_7_2_2_19_rollbacks_migration_missing_unreadable _________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d036d3c0>

>   ???
E   AssertionError

<string>:18: AssertionError
____________ test_contract_7_2_2_20_rollbacks_migration_invalid_sql ____________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d067c190>

>   ???
E   AssertionError

<string>:19: AssertionError
__________ test_contract_7_2_2_21_rollbacks_migration_execution_error __________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d036d870>

>   ???
E   AssertionError

<string>:20: AssertionError
_________________ test_contract_7_2_2_22_database_url_missing __________________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d036d840>

>   ???
E   AssertionError

<string>:17: AssertionError
_______________ test_contract_7_2_2_23_database_url_invalid_dsn ________________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d067c6d0>

>   ???
E   AssertionError

<string>:18: AssertionError
_______________ test_contract_7_2_2_24_database_host_unresolved ________________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d067e620>

>   ???
E   AssertionError

<string>:18: AssertionError
_______________ test_contract_7_2_2_25_tls_required_flag_missing _______________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d068e410>

>   ???
E   AssertionError

<string>:17: AssertionError
_______________ test_contract_7_2_2_26_tls_required_not_boolean ________________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d068fb20>

>   ???
E   AssertionError

<string>:17: AssertionError
_______ test_contract_7_2_2_27_tls_materials_unavailable_while_required ________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d068cd60>

>   ???
E   AssertionError

<string>:18: AssertionError
________________ test_contract_7_2_2_28_encryption_mode_missing ________________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d067b3d0>

>   ???
E   AssertionError

<string>:17: AssertionError
_____________ test_contract_7_2_2_29_encryption_mode_invalid_value _____________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d0678490>

>   ???
E   AssertionError

<string>:17: AssertionError
________ test_contract_7_2_2_30_kms_key_alias_required_for_column_mode _________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d06779a0>

>   ???
E   AssertionError

<string>:17: AssertionError
________________ test_contract_7_2_2_31_kms_key_alias_not_found ________________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d0675360>

>   ???
E   AssertionError

<string>:19: AssertionError
________________ test_contract_7_2_2_32_kms_get_key_call_failed ________________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d0675810>

>   ???
E   AssertionError

<string>:19: AssertionError
______________ test_contract_7_2_2_33_kms_get_key_schema_mismatch ______________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d0676a70>

>   ???
E   AssertionError

<string>:19: AssertionError
_______________ test_contract_7_2_2_34_kms_get_key_not_immutable _______________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d0675690>

>   ???
E   AssertionError

<string>:19: AssertionError
______________ test_contract_7_2_2_35_secret_manager_call_failed _______________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d06742b0>

>   ???
E   AssertionError

<string>:19: AssertionError
________________ test_contract_7_2_2_36_secret_schema_mismatch _________________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d068e350>

>   ???
E   AssertionError

<string>:19: AssertionError
_____________ test_contract_7_2_2_38_ca_bundle_missing_unreadable ______________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d068c040>

>   ???
E   AssertionError

<string>:18: AssertionError
_________________ test_contract_7_2_2_39_ca_bundle_invalid_pem _________________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d0678d30>

>   ???
E   AssertionError

<string>:18: AssertionError
_______________ test_contract_7_2_2_40_ca_certificate_not_valid ________________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d067a770>

>   ???
E   AssertionError

<string>:18: AssertionError
______ test_contract_7_2_2_41_encrypted_fields_policy_missing_unreadable _______

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d02ccd30>

>   ???
E   AssertionError

<string>:18: AssertionError
_________ test_contract_7_2_2_42_encrypted_fields_pointers_unresolved __________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d0249600>

>   ???
E   AssertionError

<string>:18: AssertionError
_____________ test_contract_7_2_2_43_encrypted_field_not_in_entity _____________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d02cf6a0>

>   ???
E   AssertionError

<string>:17: AssertionError
_______________ test_contract_7_2_2_44_migration_timeout_missing _______________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d02ce9e0>

>   ???
E   AssertionError

<string>:17: AssertionError
________ test_contract_7_2_2_45_migration_timeout_not_positive_integer _________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d02cdd80>

>   ???
E   AssertionError

<string>:17: AssertionError
__________ test_contract_7_2_2_46_runtime_migration_execution_failure __________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d02cd1b0>

>   ???
E   AssertionError

<string>:18: AssertionError
___________ test_contract_7_2_2_47_runtime_constraint_creation_error ___________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d0264940>

>   ???
E   AssertionError

<string>:18: AssertionError
____________ test_contract_7_2_2_48_runtime_encryption_apply_error _____________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d02674c0>

>   ???
E   AssertionError

<string>:20: AssertionError
________________ test_contract_7_2_2_49_runtime_rollback_error _________________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d0265b70>

>   ???
E   AssertionError

<string>:18: AssertionError
_____________ test_contract_7_2_2_50_runtime_tls_connection_error ______________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d0266830>

>   ???
E   AssertionError

<string>:18: AssertionError
______________ test_contract_7_2_2_51_runtime_row_insertion_error ______________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d0678460>

>   ???
E   AssertionError

<string>:18: AssertionError
_____________ test_contract_7_2_2_52_runtime_join_resolution_error _____________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d067bb50>

>   ???
E   AssertionError

<string>:18: AssertionError
____________ test_contract_7_2_2_53_runtime_invalid_encryption_key _____________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d067aad0>

>   ???
E   AssertionError

<string>:20: AssertionError
___________ test_contract_7_2_2_54_runtime_tls_materials_unavailable ___________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d0678070>

>   ???
E   AssertionError

<string>:18: AssertionError
_____________ test_contract_7_2_2_55_runtime_unsupported_data_type _____________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d067f820>

>   ???
E   AssertionError

<string>:18: AssertionError
____________ test_contract_7_2_2_56_runtime_migration_out_of_order _____________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d068dc60>

>   ???
E   AssertionError

<string>:17: AssertionError
______________ test_contract_7_2_2_57_runtime_unidentified_error _______________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d0678970>

>   ???
E   AssertionError

<string>:17: AssertionError
______________ test_contract_7_2_2_58_outputs_entities_incomplete ______________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d0679990>

>   ???
E   AssertionError

<string>:18: AssertionError
_______ test_contract_7_2_2_59_outputs_entities_order_not_deterministic ________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d06782e0>

>   ???
E   AssertionError

<string>:18: AssertionError
_________ test_contract_7_2_2_60_outputs_entities_mutable_within_step __________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d067ae60>

>   ???
E   AssertionError

<string>:18: AssertionError
_______________ test_contract_7_2_2_61_outputs_entity_name_empty _______________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d06783a0>

>   ???
E   AssertionError

<string>:18: AssertionError
_________ test_contract_7_2_2_62_outputs_entity_name_mismatch_with_erd _________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d068dc00>

>   ???
E   AssertionError

<string>:18: AssertionError
______________ test_contract_7_2_2_63_outputs_entity_name_missing ______________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d067dbd0>

>   ???
E   AssertionError

<string>:18: AssertionError
______________ test_contract_7_2_2_64_outputs_fields_set_invalid _______________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d067d360>

>   ???
E   AssertionError

<string>:18: AssertionError
________ test_contract_7_2_2_65_outputs_fields_order_not_deterministic _________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d06783a0>

>   ???
E   AssertionError

<string>:18: AssertionError
_____________ test_contract_7_2_2_66_outputs_fields_array_missing ______________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d067ded0>

>   ???
E   AssertionError

<string>:18: AssertionError
_________ test_contract_7_2_2_67_outputs_field_name_mismatch_with_erd __________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d067cf10>

>   ???
E   AssertionError

<string>:18: AssertionError
_____________ test_contract_7_2_2_68_outputs_field_name_not_unique _____________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d067df60>

>   ???
E   AssertionError

<string>:18: AssertionError
______________ test_contract_7_2_2_69_outputs_field_name_missing _______________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d067cbb0>

>   ???
E   AssertionError

<string>:18: AssertionError
_________ test_contract_7_2_2_70_outputs_field_type_mismatch_with_erd __________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d067f070>

>   ???
E   AssertionError

<string>:18: AssertionError
______________ test_contract_7_2_2_71_outputs_field_type_missing _______________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d036c970>

>   ???
E   AssertionError

<string>:18: AssertionError
______ test_contract_7_2_2_72_outputs_encrypted_flag_false_when_required _______

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d036e680>

>   ???
E   AssertionError

<string>:18: AssertionError
_____ test_contract_7_2_2_73_outputs_encrypted_flag_true_when_not_required _____

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d036f280>

>   ???
E   AssertionError

<string>:18: AssertionError
____________ test_contract_7_2_2_74_outputs_encrypted_flag_missing _____________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d067d990>

>   ???
E   AssertionError

<string>:18: AssertionError
_______________ test_contract_7_2_2_75_primary_key_columns_empty _______________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d036c7f0>

>   ???
E   AssertionError

<string>:18: AssertionError
______________ test_contract_7_2_2_76_primary_key_columns_unknown ______________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d01db0a0>

>   ???
E   AssertionError

<string>:18: AssertionError
______ test_contract_7_2_2_77_primary_key_columns_order_not_deterministic ______

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d01d9f60>

>   ???
E   AssertionError

<string>:18: AssertionError
______ test_contract_7_2_2_78_primary_key_columns_missing_when_pk_defined ______

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d036ceb0>

>   ???
E   AssertionError

<string>:18: AssertionError
_________ test_contract_7_2_2_80_foreign_keys_order_not_deterministic __________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d06784c0>

>   ???
E   AssertionError

<string>:18: AssertionError
________________ test_contract_7_2_2_81_foreign_key_name_empty _________________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d01d9f00>

>   ???
E   AssertionError

<string>:18: AssertionError
______________ test_contract_7_2_2_82_foreign_key_name_not_unique ______________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d01dbf10>

>   ???
E   AssertionError

<string>:18: AssertionError
______________ test_contract_7_2_2_84_foreign_key_columns_unknown ______________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d036d120>

>   ???
E   AssertionError

<string>:18: AssertionError
______ test_contract_7_2_2_85_foreign_key_columns_order_not_deterministic ______

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d01db160>

>   ???
E   AssertionError

<string>:18: AssertionError
______ test_contract_7_2_2_93_unique_constraints_order_not_deterministic _______

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d06885b0>

>   ???
E   AssertionError

<string>:18: AssertionError
_____________ test_contract_7_2_2_94_unique_constraint_name_empty ______________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d06898a0>

>   ???
E   AssertionError

<string>:18: AssertionError
___________ test_contract_7_2_2_95_unique_constraint_name_not_unique ___________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d036e4d0>

>   ???
E   AssertionError

<string>:18: AssertionError
___________ test_contract_7_2_2_97_unique_constraint_columns_unknown ___________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d066a1d0>

>   ???
E   AssertionError

<string>:18: AssertionError
___ test_contract_7_2_2_98_unique_constraint_columns_order_not_deterministic ___

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d02cfa60>

>   ???
E   AssertionError

<string>:18: AssertionError
___________ test_contract_7_2_2_101_indexes_order_not_deterministic ____________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d066b310>

>   ???
E   AssertionError

<string>:18: AssertionError
___________________ test_contract_7_2_2_102_index_name_empty ___________________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d068a650>

>   ???
E   AssertionError

<string>:18: AssertionError
________________ test_contract_7_2_2_103_index_name_not_unique _________________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d02ce5c0>

>   ???
E   AssertionError

<string>:18: AssertionError
________________ test_contract_7_2_2_105_index_columns_unknown _________________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d02ceb30>

>   ???
E   AssertionError

<string>:18: AssertionError
________ test_contract_7_2_2_106_index_columns_order_not_deterministic _________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d0668490>

>   ???
E   AssertionError

<string>:18: AssertionError
___________________ test_contract_7_2_2_108_enums_incomplete ___________________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d01da4a0>

>   ???
E   AssertionError

<string>:18: AssertionError
____________ test_contract_7_2_2_109_enums_order_not_deterministic _____________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d01dab00>

>   ???
E   AssertionError

<string>:18: AssertionError
___________________ test_contract_7_2_2_110_enum_name_empty ____________________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d036e0e0>

>   ???
E   AssertionError

<string>:18: AssertionError
_____________ test_contract_7_2_2_111_enum_name_mismatch_with_erd ______________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d068c220>

>   ???
E   AssertionError

<string>:18: AssertionError
__________ test_contract_7_2_2_112_enum_name_missing_when_enums_exist __________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d01dbb80>

>   ???
E   AssertionError

<string>:18: AssertionError
__________________ test_contract_7_2_2_113_enum_values_empty ___________________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d06881c0>

>   ???
E   AssertionError

<string>:18: AssertionError
____________ test_contract_7_2_2_114_enum_values_mismatch_with_erd _____________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d068dd20>

>   ???
E   AssertionError

<string>:18: AssertionError
_________ test_contract_7_2_2_115_enum_values_order_not_deterministic __________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d067cf40>

>   ???
E   AssertionError

<string>:18: AssertionError
_________ test_contract_7_2_2_116_enum_values_missing_when_enums_exist _________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d067fdf0>

>   ???
E   AssertionError

<string>:18: AssertionError
_____________ test_contract_7_2_2_117_encrypted_fields_incomplete ______________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d0689900>

>   ???
E   AssertionError

<string>:18: AssertionError
__________ test_contract_7_2_2_118_encrypted_fields_values_not_unique __________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d036d570>

>   ???
E   AssertionError

<string>:18: AssertionError
________ test_contract_7_2_2_119_encrypted_fields_present_when_erd_none ________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d0678b20>

>   ???
E   AssertionError

<string>:18: AssertionError
____________ test_contract_7_2_2_120_constraints_applied_incomplete ____________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d06761d0>

>   ???
E   AssertionError

<string>:18: AssertionError
___________ test_contract_7_2_2_121_constraints_applied_value_empty ____________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d01dbb20>

>   ???
E   AssertionError

<string>:18: AssertionError
________ test_contract_7_2_2_122_constraints_applied_values_not_unique _________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d0689630>

>   ???
E   AssertionError

<string>:18: AssertionError
_____ test_contract_7_2_2_123_constraints_applied_order_not_deterministic ______

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d068d900>

>   ???
E   AssertionError

<string>:18: AssertionError
_______________ test_contract_7_2_2_124_migration_journal_empty ________________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d0676a10>

>   ???
E   AssertionError

<string>:18: AssertionError
______ test_contract_7_2_2_125_migration_journal_order_not_deterministic _______

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d068d780>

>   ???
E   AssertionError

<string>:18: AssertionError
______ test_contract_7_2_2_126_migration_journal_missing_required_fields _______

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d01dace0>

>   ???
E   AssertionError

<string>:13: AssertionError
________ test_behaviour_7_3_2_1_halt_on_migration_execution_error_e1_e2 ________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d0674310>

>   ???
E   AssertionError

<string>:18: AssertionError
_____ test_behaviour_7_3_2_2_halt_on_constraint_creation_error_e2_indexes ______

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d02649a0>

>   ???
E   AssertionError

<string>:18: AssertionError
___ test_behaviour_7_3_2_3_halt_on_encryption_application_error_e3_remainder ___

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d0267610>

>   ???
E   AssertionError

<string>:18: AssertionError
______________ test_behaviour_7_3_2_4_halt_on_rollback_failure_e8 ______________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d01db8e0>

>   ???
E   AssertionError

<string>:18: AssertionError
__________ test_behaviour_7_3_2_5_halt_on_tls_connection_error_e4_e5 ___________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d068c130>

>   ???
E   AssertionError

<string>:18: AssertionError
_____ test_behaviour_7_3_2_6_halt_on_row_insertion_validation_error_e5_e6 ______

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d02ccf40>

>   ???
E   AssertionError

<string>:18: AssertionError
__________ test_behaviour_7_3_2_7_halt_on_join_resolution_error_e6_e7 __________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d0248a00>

>   ???
E   AssertionError

<string>:18: AssertionError
_ test_behaviour_7_3_2_8_halt_on_invalid_encryption_key_during_field_access_s3 _

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d0249900>

>   ???
E   AssertionError

<string>:18: AssertionError
________ test_behaviour_7_3_2_9_halt_when_tls_materials_unavailable_e4 _________

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d024a530>

>   ???
E   AssertionError

<string>:18: AssertionError
____ test_behaviour_7_3_2_10_halt_on_unsupported_data_type_at_validation_e5 ____

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d049d1e0>

>   ???
E   AssertionError

<string>:18: AssertionError
__ test_behaviour_7_3_2_11_halt_on_out_of_order_migration_execution_e1_e2_e8 ___

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d049de10>

>   ???
E   AssertionError

<string>:18: AssertionError
_____ test_behaviour_7_3_2_12_halt_on_unidentified_runtime_error_catch_all _____

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d049ea40>

>   ???
E   AssertionError

<string>:18: AssertionError
_ test_behaviour_7_3_2_13_database_connectivity_failure_halts_step_3_and_prevents_downstream_operations _

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d049d480>

>   ???
E   AssertionError

<string>:14: AssertionError
_ test_behaviour_7_3_2_14_database_permission_failure_halts_step_3_and_prevents_schema_creation _

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d042ec50>

>   ???
E   AssertionError

<string>:14: AssertionError
_ test_behaviour_7_3_2_15_tls_certificate_handshake_failure_halts_step_3_and_prevents_inserts _

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d049f610>

>   ???
E   AssertionError

<string>:14: AssertionError
_ test_behaviour_7_3_2_16_database_storage_exhaustion_halts_step_3_and_prevents_journal_updates _

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d042fb80>

>   ???
E   AssertionError

<string>:14: AssertionError
_ test_behaviour_7_3_2_17_filesystem_temp_unavailability_prevents_step_3_continuation_degraded_stop _

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d049eda0>

>   ???
E   AssertionError

<string>:14: AssertionError
_ test_behaviour_7_3_2_18_kms_unavailability_halts_step_3_encryption_operations_and_prevents_access _

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d04c0b50>

>   ???
E   AssertionError

<string>:14: AssertionError
_ test_behaviour_7_3_2_19_time_synchronisation_failure_halts_step_3_where_timestamps_are_required _

self = <unittest.mock._patch object at 0x7f52d042df00>

    def __enter__(self):
        """Perform the patch."""
        new, spec, spec_set = self.new, self.spec, self.spec_set
        autospec, kwargs = self.autospec, self.kwargs
        new_callable = self.new_callable
        self.target = self.getter()
    
        # normalise False to None
        if spec is False:
            spec = None
        if spec_set is False:
            spec_set = None
        if autospec is False:
            autospec = None
    
        if spec is not None and autospec is not None:
            raise TypeError("Can't specify spec and autospec")
        if ((spec is not None or autospec is not None) and
            spec_set not in (True, None)):
            raise TypeError("Can't provide explicit spec_set *and* spec or autospec")
    
        original, local = self.get_original()
    
        if new is DEFAULT and autospec is None:
            inherit = False
            if spec is True:
                # set spec to the object we are replacing
                spec = original
                if spec_set is True:
                    spec_set = original
                    spec = None
            elif spec is not None:
                if spec_set is True:
                    spec_set = spec
                    spec = None
            elif spec_set is True:
                spec_set = original
    
            if spec is not None or spec_set is not None:
                if original is DEFAULT:
                    raise TypeError("Can't use 'spec' with create=True")
                if isinstance(original, type):
                    # If we're patching out a class and there is a spec
                    inherit = True
            if spec is None and _is_async_obj(original):
                Klass = AsyncMock
            else:
                Klass = MagicMock
            _kwargs = {}
            if new_callable is not None:
                Klass = new_callable
            elif spec is not None or spec_set is not None:
                this_spec = spec
                if spec_set is not None:
                    this_spec = spec_set
                if _is_list(this_spec):
                    not_callable = '__call__' not in this_spec
                else:
                    not_callable = not callable(this_spec)
                if _is_async_obj(this_spec):
                    Klass = AsyncMock
                elif not_callable:
                    Klass = NonCallableMagicMock
    
            if spec is not None:
                _kwargs['spec'] = spec
            if spec_set is not None:
                _kwargs['spec_set'] = spec_set
    
            # add a name to mocks
            if (isinstance(Klass, type) and
                issubclass(Klass, NonCallableMock) and self.attribute):
                _kwargs['name'] = self.attribute
    
            _kwargs.update(kwargs)
            new = Klass(**_kwargs)
    
            if inherit and _is_instance_mock(new):
                # we can only tell if the instance should be callable if the
                # spec is not a list
                this_spec = spec
                if spec_set is not None:
                    this_spec = spec_set
                if (not _is_list(this_spec) and not
                    _instance_callable(this_spec)):
                    Klass = NonCallableMagicMock
    
                _kwargs.pop('name')
                new.return_value = Klass(_new_parent=new, _new_name='()',
                                         **_kwargs)
        elif autospec is not None:
            # spec is ignored, new *must* be default, spec_set is treated
            # as a boolean. Should we check spec is not None and that spec_set
            # is a bool?
            if new is not DEFAULT:
                raise TypeError(
                    "autospec creates the mock for you. Can't specify "
                    "autospec and new."
                )
            if original is DEFAULT:
                raise TypeError("Can't use 'autospec' with create=True")
            spec_set = bool(spec_set)
            if autospec is True:
                autospec = original
    
            if _is_instance_mock(self.target):
                raise InvalidSpecError(
                    f'Cannot autospec attr {self.attribute!r} as the patch '
                    f'target has already been mocked out. '
                    f'[target={self.target!r}, attr={autospec!r}]')
            if _is_instance_mock(autospec):
                target_name = getattr(self.target, '__name__', self.target)
                raise InvalidSpecError(
                    f'Cannot autospec attr {self.attribute!r} from target '
                    f'{target_name!r} as it has already been mocked out. '
                    f'[target={self.target!r}, attr={autospec!r}]')
    
            new = create_autospec(autospec, spec_set=spec_set,
                                  _name=self.attribute, **kwargs)
        elif kwargs:
            # can't set keyword args when we aren't creating the mock
            # XXXX If new is a Mock we could call new.configure_mock(**kwargs)
            raise TypeError("Can't pass kwargs to a mock we aren't creating")
    
        new_attr = new
    
        self.temp_original = original
        self.is_local = local
        self._exit_stack = contextlib.ExitStack()
        try:
>           setattr(self.target, self.attribute, new_attr)
E           TypeError: cannot set 'utcnow' attribute of immutable type 'datetime.datetime'

/usr/lib/python3.10/unittest/mock.py:1556: TypeError

During handling of the above exception, another exception occurred:

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d042de40>

>   ???

<string>:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.10/site-packages/pytest_mock/plugin.py:439: in __call__
    return self._start_patch(
../.local/lib/python3.10/site-packages/pytest_mock/plugin.py:257: in _start_patch
    mocked: MockType = p.start()
/usr/lib/python3.10/unittest/mock.py:1595: in start
    result = self.__enter__()
/usr/lib/python3.10/unittest/mock.py:1569: in __enter__
    if not self.__exit__(*sys.exc_info()):
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <unittest.mock._patch object at 0x7f52d042df00>
exc_info = (<class 'TypeError'>, TypeError("cannot set 'utcnow' attribute of immutable type 'datetime.datetime'"), <traceback object at 0x7f52d18f7d80>)

    def __exit__(self, *exc_info):
        """Undo the patch."""
        if self.is_local and self.temp_original is not DEFAULT:
>           setattr(self.target, self.attribute, self.temp_original)
E           TypeError: cannot set 'utcnow' attribute of immutable type 'datetime.datetime'

/usr/lib/python3.10/unittest/mock.py:1575: TypeError
_ test_behaviour_7_3_2_20_configuration_dependency_unavailability_prevents_step_3_initiation _

mocker = <pytest_mock.plugin.MockerFixture object at 0x7f52d024a4a0>

>   ???
E   AssertionError

<string>:14: AssertionError
=============================== warnings summary ===============================
<string>:3
<string>:3
<string>:3
  <string>:3: DeprecationWarning: invalid escape sequence '\_'

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_1_3_primary_key_externally_declared - AssertionError: assert not ['option_id']
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_1_4_foreign_keys_present - AttributeError: 'list' object has no attribute 'items'
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_1_16_tls_enforcement_externally_visible - AssertionError: assert None is True
 +  where None = <built-in method get of dict object at 0x7f52d023d900>('required')
 +    where <built-in method get of dict object at 0x7f52d023d900> = {}.get
 +      where {} = <built-in method get of dict object at 0x7f52d023d5c0>('ssl', {})
 +        where <built-in method get of dict object at 0x7f52d023d5c0> = {}.get
 +          where {} = <built-in method get of dict object at 0x7f52d023d8c0>('database', {})
 +            where <built-in method get of dict object at 0x7f52d023d8c0> = {}.get
FAILED tests/functional/test_epic_a_data_model_functional.py::test_behaviour_7_3_1_8_rollback_immediately_after_failure - AssertionError: assert 0 == 1
 +  where 0 = <built-in method count of list object at 0x7f52d03ec240>('rollback')
 +    where <built-in method count of list object at 0x7f52d03ec240> = ['runner.start', 'create_tables', 'create_constraints', 'apply_encryption', 'tls.established', 'db.execute', ...].count
FAILED tests/functional/test_epic_a_data_model_functional.py::test_behaviour_7_3_1_11_template_registration_without_migrations - AssertionError: assert 0 == 1
 +  where 0 = <built-in method count of list object at 0x7f52d00132c0>('template.register')
 +    where <built-in method count of list object at 0x7f52d00132c0> = ['runner.start', 'create_tables', 'create_constraints', 'apply_encryption', 'tls.established', 'db.execute', ...].count
FAILED tests/functional/test_epic_a_data_model_functional.py::test_behaviour_7_3_1_12_policy_registration_without_migrations - AssertionError: assert 0 == 1
 +  where 0 = <built-in method count of list object at 0x7f52d002c280>('policy.register')
 +    where <built-in method count of list object at 0x7f52d002c280> = ['runner.start', 'create_tables', 'create_constraints', 'apply_encryption', 'tls.established', 'db.execute', ...].count
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_3_erd_spec_schema_mismatch - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_4_mermaid_erd_missing_unreadable - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_5_mermaid_erd_not_utf_8 - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_6_mermaid_erd_invalid_syntax - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_7_relationships_csv_missing_unreadable - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_8_relationships_csv_invalid_csv - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_9_relationships_csv_header_mismatch - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_10_init_migration_missing_unreadable - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_11_init_migration_invalid_sql - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_12_init_migration_execution_error - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_13_constraints_migration_missing_unreadable - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_14_constraints_migration_invalid_sql - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_15_constraints_migration_execution_error - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_16_indexes_migration_missing_unreadable - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_17_indexes_migration_invalid_sql - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_18_indexes_migration_execution_error - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_19_rollbacks_migration_missing_unreadable - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_20_rollbacks_migration_invalid_sql - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_21_rollbacks_migration_execution_error - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_22_database_url_missing - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_23_database_url_invalid_dsn - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_24_database_host_unresolved - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_25_tls_required_flag_missing - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_26_tls_required_not_boolean - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_27_tls_materials_unavailable_while_required - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_28_encryption_mode_missing - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_29_encryption_mode_invalid_value - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_30_kms_key_alias_required_for_column_mode - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_31_kms_key_alias_not_found - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_32_kms_get_key_call_failed - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_33_kms_get_key_schema_mismatch - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_34_kms_get_key_not_immutable - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_35_secret_manager_call_failed - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_36_secret_schema_mismatch - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_38_ca_bundle_missing_unreadable - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_39_ca_bundle_invalid_pem - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_40_ca_certificate_not_valid - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_41_encrypted_fields_policy_missing_unreadable - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_42_encrypted_fields_pointers_unresolved - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_43_encrypted_field_not_in_entity - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_44_migration_timeout_missing - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_45_migration_timeout_not_positive_integer - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_46_runtime_migration_execution_failure - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_47_runtime_constraint_creation_error - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_48_runtime_encryption_apply_error - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_49_runtime_rollback_error - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_50_runtime_tls_connection_error - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_51_runtime_row_insertion_error - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_52_runtime_join_resolution_error - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_53_runtime_invalid_encryption_key - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_54_runtime_tls_materials_unavailable - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_55_runtime_unsupported_data_type - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_56_runtime_migration_out_of_order - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_57_runtime_unidentified_error - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_58_outputs_entities_incomplete - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_59_outputs_entities_order_not_deterministic - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_60_outputs_entities_mutable_within_step - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_61_outputs_entity_name_empty - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_62_outputs_entity_name_mismatch_with_erd - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_63_outputs_entity_name_missing - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_64_outputs_fields_set_invalid - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_65_outputs_fields_order_not_deterministic - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_66_outputs_fields_array_missing - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_67_outputs_field_name_mismatch_with_erd - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_68_outputs_field_name_not_unique - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_69_outputs_field_name_missing - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_70_outputs_field_type_mismatch_with_erd - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_71_outputs_field_type_missing - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_72_outputs_encrypted_flag_false_when_required - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_73_outputs_encrypted_flag_true_when_not_required - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_74_outputs_encrypted_flag_missing - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_75_primary_key_columns_empty - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_76_primary_key_columns_unknown - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_77_primary_key_columns_order_not_deterministic - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_78_primary_key_columns_missing_when_pk_defined - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_80_foreign_keys_order_not_deterministic - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_81_foreign_key_name_empty - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_82_foreign_key_name_not_unique - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_84_foreign_key_columns_unknown - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_85_foreign_key_columns_order_not_deterministic - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_93_unique_constraints_order_not_deterministic - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_94_unique_constraint_name_empty - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_95_unique_constraint_name_not_unique - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_97_unique_constraint_columns_unknown - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_98_unique_constraint_columns_order_not_deterministic - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_101_indexes_order_not_deterministic - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_102_index_name_empty - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_103_index_name_not_unique - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_105_index_columns_unknown - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_106_index_columns_order_not_deterministic - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_108_enums_incomplete - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_109_enums_order_not_deterministic - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_110_enum_name_empty - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_111_enum_name_mismatch_with_erd - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_112_enum_name_missing_when_enums_exist - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_113_enum_values_empty - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_114_enum_values_mismatch_with_erd - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_115_enum_values_order_not_deterministic - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_116_enum_values_missing_when_enums_exist - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_117_encrypted_fields_incomplete - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_118_encrypted_fields_values_not_unique - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_119_encrypted_fields_present_when_erd_none - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_120_constraints_applied_incomplete - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_121_constraints_applied_value_empty - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_122_constraints_applied_values_not_unique - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_123_constraints_applied_order_not_deterministic - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_124_migration_journal_empty - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_125_migration_journal_order_not_deterministic - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_contract_7_2_2_126_migration_journal_missing_required_fields - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_behaviour_7_3_2_1_halt_on_migration_execution_error_e1_e2 - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_behaviour_7_3_2_2_halt_on_constraint_creation_error_e2_indexes - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_behaviour_7_3_2_3_halt_on_encryption_application_error_e3_remainder - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_behaviour_7_3_2_4_halt_on_rollback_failure_e8 - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_behaviour_7_3_2_5_halt_on_tls_connection_error_e4_e5 - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_behaviour_7_3_2_6_halt_on_row_insertion_validation_error_e5_e6 - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_behaviour_7_3_2_7_halt_on_join_resolution_error_e6_e7 - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_behaviour_7_3_2_8_halt_on_invalid_encryption_key_during_field_access_s3 - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_behaviour_7_3_2_9_halt_when_tls_materials_unavailable_e4 - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_behaviour_7_3_2_10_halt_on_unsupported_data_type_at_validation_e5 - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_behaviour_7_3_2_11_halt_on_out_of_order_migration_execution_e1_e2_e8 - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_behaviour_7_3_2_12_halt_on_unidentified_runtime_error_catch_all - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_behaviour_7_3_2_13_database_connectivity_failure_halts_step_3_and_prevents_downstream_operations - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_behaviour_7_3_2_14_database_permission_failure_halts_step_3_and_prevents_schema_creation - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_behaviour_7_3_2_15_tls_certificate_handshake_failure_halts_step_3_and_prevents_inserts - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_behaviour_7_3_2_16_database_storage_exhaustion_halts_step_3_and_prevents_journal_updates - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_behaviour_7_3_2_17_filesystem_temp_unavailability_prevents_step_3_continuation_degraded_stop - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_behaviour_7_3_2_18_kms_unavailability_halts_step_3_encryption_operations_and_prevents_access - AssertionError
FAILED tests/functional/test_epic_a_data_model_functional.py::test_behaviour_7_3_2_19_time_synchronisation_failure_halts_step_3_where_timestamps_are_required - TypeError: cannot set 'utcnow' attribute of immutable type 'datetime.datetime'
FAILED tests/functional/test_epic_a_data_model_functional.py::test_behaviour_7_3_2_20_configuration_dependency_unavailability_prevents_step_3_initiation - AssertionError
============ 135 failed, 66 passed, 1 skipped, 3 warnings in 1.63s =============
